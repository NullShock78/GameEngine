2016-08-09 21:29:34:915[Process      ] GameLogger::Initialize() opened log file [..\Data\LogFiles\2016-08-09 21-29-34.BodaciousQuest.log] for writing
2016-08-09 21:29:34:915[Info         ] GameLogger::Initialize() successful
2016-08-09 21:29:34:915[Process      ] ConfigReader opened [..\Data\BodaciousQuest.config] successfully
2016-08-09 21:29:34:915[Info         ] ConfigReader initialized successfully
2016-08-09 21:29:34:915[Info         ] Valid KVP [BodaciousQuest.ShowFullScreen] [false] added
2016-08-09 21:29:34:915[Info         ] Valid KVP [BodaciousQuest.FpsInterval] [5.0] added
2016-08-09 21:29:34:917[Info         ] Valid KVP [BodaciousQuest.EnableControls] [true] added
2016-08-09 21:29:34:917[Info         ] Valid KVP [BodaciousQuest.LoadCubeFirst] [true] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [BodaciousQuest.CameraWalkMode] [false] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [BodaciousQuest.GridSize] [40] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Mode.VertexType] [pt] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Mode.Analyze] [false] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model] [AIWorld] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Color] [random] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Obj.InputFileFolder] [..\\Data\\Objs\\] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Scene.OutputFileFolder] [..\\Data\\Scenes\\] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Dargon.NumVerts] [57967] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Dargon.NumIndices] [337824] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Dargon.NumTexCoords] [60175] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Dargon.NumNormals] [337824] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Swamp.NumVerts] [2735] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Swamp.NumIndices] [8556] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Swamp.NumTexCoords] [3622] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Swamp.NumNormals] [5156] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Pyramid.NumVerts] [5] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Pyramid.NumIndices] [18] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Pyramid.NumTexCoords] [10] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Pyramid.NumNormals] [16] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.AIWorld.NumVerts] [1957] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.AIWorld.NumIndices] [8718] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.AIWorld.NumTexCoords] [4186] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.AIWorld.NumNormals] [5418] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.GameWeapon.NumVerts] [2068] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.GameWeapon.NumIndices] [9894] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.GameWeapon.NumTexCoords] [0] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.GameWeapon.NumNormals] [0] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Chicken.NumVerts] [224] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Chicken.NumIndices] [1374] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Chicken.NumTexCoords] [472] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Chicken.NumNormals] [565] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Cube.NumVerts] [8] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Cube.NumIndices] [36] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Cube.NumTexCoords] [14] added
2016-08-09 21:29:34:918[Info         ] Valid KVP [ObjConverter.Model.Cube.NumNormals] [24] added
2016-08-09 21:29:35:007[Process      ] ShaderManager Initialized successfully
2016-08-09 21:29:35:007[cInfo        ] Shader Init started
2016-08-09 21:29:35:007[cInfo        ] Shader Program created.
2016-08-09 21:29:35:008[cProcess     ] ShaderProgram::Initialize()[1] successful!
2016-08-09 21:29:35:010[Debug        ] File [..\Data\shaders\debug.vert.shader] Opened successfully! Buffer Length:[291]
2016-08-09 21:29:35:010[Debug        ] Shader file [..\Data\shaders\debug.vert.shader] contents:
//BEGIN
#version 430 core

layout(location = 0)  in vec3 vPosition;

layout(location = 15) uniform vec3 colorin;
layout(location = 16) uniform mat4 MAT;

out vec4 color;

void main()
{
	vec4 vertPos = vec4(vPosition, 1.0);
	gl_Position = MAT *  vertPos;
	color = vec4(colorin, 1.0);
}
//END

2016-08-09 21:29:35:010[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:29:35:010[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:29:35:010[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:012[Info         ] ShaderProgram::CheckShaderCompileStatus(2) successful.
2016-08-09 21:29:35:012[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:013[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:29:35:014[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:29:35:015[Info         ] ShaderProgram::AddShader [2] successful.
2016-08-09 21:29:35:015[Debug        ] File [..\Data\shaders\debug.frag.shader] Opened successfully! Buffer Length:[104]
2016-08-09 21:29:35:015[Debug        ] Shader file [..\Data\shaders\debug.frag.shader] contents:
//BEGIN
#version 430 core


in  vec4 color;
out vec4 outColor;

void main()
{
	outColor = color;
}


//END

2016-08-09 21:29:35:015[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:29:35:015[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:29:35:015[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:016[Info         ] ShaderProgram::CheckShaderCompileStatus(3) successful.
2016-08-09 21:29:35:016[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:017[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:29:35:018[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:29:35:022[Info         ] ShaderProgram::AddShader [3] successful.
2016-08-09 21:29:35:023[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:29:35:024[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:29:35:025[cInfo        ] Shader Init started
2016-08-09 21:29:35:025[cInfo        ] Shader Program created.
2016-08-09 21:29:35:026[cProcess     ] ShaderProgram::Initialize()[4] successful!
2016-08-09 21:29:35:027[Debug        ] File [..\Data\shaders\play.vert.shader] Opened successfully! Buffer Length:[343]
2016-08-09 21:29:35:027[Debug        ] Shader file [..\Data\shaders\play.vert.shader] contents:
//BEGIN
#version 430 core

layout (location = 0)  in vec3 vPosition;
layout (location = 1)  in vec3 vColor;
layout (location = 15) uniform vec3 colorin;
layout (location = 16) uniform mat4 MAT;

out vec4 color;

void main()
{
	vec4 vertPos = vec4(vPosition, 1.0);
	gl_Position = MAT *  vertPos;
	color = vec4((vColor + colorin), 1.0);
}
//END

2016-08-09 21:29:35:027[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:29:35:027[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:29:35:027[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:028[Info         ] ShaderProgram::CheckShaderCompileStatus(5) successful.
2016-08-09 21:29:35:028[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:028[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:29:35:029[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:29:35:031[Info         ] ShaderProgram::AddShader [5] successful.
2016-08-09 21:29:35:031[Debug        ] File [..\Data\shaders\play.frag.shader] Opened successfully! Buffer Length:[391]
2016-08-09 21:29:35:031[Debug        ] Shader file [..\Data\shaders\play.frag.shader] contents:
//BEGIN
#version 430 core


in  vec4 color;
out vec4 outColor;

void main()
{

	//if (color.r < .7) discard;
	outColor = color;

	//if(((gl_FragCoord.x  > 600)&& (gl_FragCoord.y < 300)) || ((gl_FragCoord.y < 300)  && (gl_FragCoord.x  < 600) )) {
	//discard;
	//}

	//vec2 scrPos = vec2(gl_FragCoord) - vec2(350,150);
	//float len =  length(scrPos);
	//if(len < 50 )discard;
}


//END

2016-08-09 21:29:35:031[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:29:35:031[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:29:35:031[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:032[Info         ] ShaderProgram::CheckShaderCompileStatus(6) successful.
2016-08-09 21:29:35:032[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:033[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:29:35:034[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:29:35:035[Info         ] ShaderProgram::AddShader [6] successful.
2016-08-09 21:29:35:036[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:29:35:036[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:29:35:037[cInfo        ] Shader Init started
2016-08-09 21:29:35:038[cInfo        ] Shader Program created.
2016-08-09 21:29:35:038[cProcess     ] ShaderProgram::Initialize()[7] successful!
2016-08-09 21:29:35:039[Debug        ] File [..\Data\shaders\texture.vert.shader] Opened successfully! Buffer Length:[305]
2016-08-09 21:29:35:039[Debug        ] Shader file [..\Data\shaders\texture.vert.shader] contents:
//BEGIN
#version 430 core

layout (location = 0)  in vec3 vPosition;
layout (location = 1)  in vec2 vUV;

layout (location = 16) uniform mat4 MAT;

//out data
out vec2 UV;

//out vec4 color;

void main()
{
	vec4 vertPos = vec4(vPosition, 1.0);
	gl_Position = MAT *  vertPos;

	UV = vUV;
	
	
}
//END

2016-08-09 21:29:35:039[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:29:35:039[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:29:35:039[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:041[Info         ] ShaderProgram::CheckShaderCompileStatus(8) successful.
2016-08-09 21:29:35:041[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:042[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:29:35:043[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:29:35:044[Info         ] ShaderProgram::AddShader [8] successful.
2016-08-09 21:29:35:044[Debug        ] File [..\Data\shaders\texture.frag.shader] Opened successfully! Buffer Length:[482]
2016-08-09 21:29:35:044[Debug        ] Shader file [..\Data\shaders\texture.frag.shader] contents:
//BEGIN
#version 430 core


in  vec2 UV;
out vec4 outColor;

layout(location = 20) uniform sampler2D textureSampler;

void main()
{

	//if (color.r < .7) discard;
	outColor = vec4(texture(textureSampler, UV).rgb, 1.0);

	//if(((gl_FragCoord.x  > 600)&& (gl_FragCoord.y < 300)) || ((gl_FragCoord.y < 300)  && (gl_FragCoord.x  < 600) )) {
	//discard;
	//}
	//vec2 scrPos = vec2(gl_FragCoord) - vec2(350,150);
	//float len =  length(scrPos);
	//if(len < 50 )discard;
}


//END

2016-08-09 21:29:35:044[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:29:35:044[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:29:35:044[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:045[Info         ] ShaderProgram::CheckShaderCompileStatus(9) successful.
2016-08-09 21:29:35:045[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:046[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:29:35:046[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:29:35:047[Info         ] ShaderProgram::AddShader [9] successful.
2016-08-09 21:29:35:048[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:29:35:049[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:29:35:052[cInfo        ] Shader Init started
2016-08-09 21:29:35:053[cInfo        ] Shader Program created.
2016-08-09 21:29:35:054[cProcess     ] ShaderProgram::Initialize()[10] successful!
2016-08-09 21:29:35:054[Debug        ] File [..\Data\shaders\framebuffer.vert.shader] Opened successfully! Buffer Length:[305]
2016-08-09 21:29:35:054[Debug        ] Shader file [..\Data\shaders\framebuffer.vert.shader] contents:
//BEGIN
#version 430 core

layout (location = 0)  in vec3 vPosition;
layout (location = 1)  in vec2 vUV;

layout (location = 16) uniform mat4 MAT;

//out data
out vec2 UV;

//out vec4 color;

void main()
{
	vec4 vertPos = vec4(vPosition, 1.0);
	gl_Position = MAT *  vertPos;

	UV = vUV;
	
	
}
//END

2016-08-09 21:29:35:054[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:29:35:054[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:29:35:055[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:055[Info         ] ShaderProgram::CheckShaderCompileStatus(11) successful.
2016-08-09 21:29:35:055[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:056[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:29:35:057[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:29:35:058[Info         ] ShaderProgram::AddShader [11] successful.
2016-08-09 21:29:35:058[Debug        ] File [..\Data\shaders\framebuffer.frag.shader] Opened successfully! Buffer Length:[599]
2016-08-09 21:29:35:058[Debug        ] Shader file [..\Data\shaders\framebuffer.frag.shader] contents:
//BEGIN
#version 430 core


in  vec2 UV;
out vec4 outColor;

layout(location = 20) uniform sampler2D textureSampler;

void main()
{

	//if (color.r < .7) discard;
	vec3 tempCol = texture(textureSampler, UV).rgb;
	//if (tempCol == vec3(0, 0, 0)) discard;
	outColor = vec4(tempCol.r / 1.5f, tempCol.g / 1.5f, tempCol.b / 1.5f, 1.0f);

	//if(((gl_FragCoord.x  > 600)&& (gl_FragCoord.y < 300)) || ((gl_FragCoord.y < 300)  && (gl_FragCoord.x  < 600) )) {
	//discard;
	//}

	//vec2 scrPos = vec2(gl_FragCoord) - vec2(350,150);
	//float len =  length(scrPos);
	//if(len < 50 )discard;
}


//END

2016-08-09 21:29:35:058[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:29:35:058[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:29:35:058[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:059[Info         ] ShaderProgram::CheckShaderCompileStatus(12) successful.
2016-08-09 21:29:35:059[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:061[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:29:35:061[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:29:35:062[Info         ] ShaderProgram::AddShader [12] successful.
2016-08-09 21:29:35:064[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:29:35:064[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:29:35:065[cInfo        ] Shader Init started
2016-08-09 21:29:35:065[cInfo        ] Shader Program created.
2016-08-09 21:29:35:066[cProcess     ] ShaderProgram::Initialize()[13] successful!
2016-08-09 21:29:35:067[Debug        ] File [..\Data\shaders\lighting.vert.shader] Opened successfully! Buffer Length:[2053]
2016-08-09 21:29:35:067[cDebug       ] Shader file [..\Data\shaders\lighting.vert.shader] is too big to display contents.
2016-08-09 21:29:35:068[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:29:35:068[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:29:35:069[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:071[Info         ] ShaderProgram::CheckShaderCompileStatus(14) successful.
2016-08-09 21:29:35:071[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:072[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:29:35:073[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:29:35:074[Info         ] ShaderProgram::AddShader [14] successful.
2016-08-09 21:29:35:075[Debug        ] File [..\Data\shaders\lighting.frag.shader] Opened successfully! Buffer Length:[528]
2016-08-09 21:29:35:075[Debug        ] Shader file [..\Data\shaders\lighting.frag.shader] contents:
//BEGIN
#version 430 core


in  vec3 normal;
in  vec3 color;
out vec4 outColor;

//layout(location = 20) uniform sampler2D textureSampler;

void main()
{

	//if (color.r < .7) discard;


	outColor = vec4(color, 1.0f);//vec4(normal.x, normal.y, normal.z, 1.0);

	//if(((gl_FragCoord.x  > 600)&& (gl_FragCoord.y < 300)) || ((gl_FragCoord.y < 300)  && (gl_FragCoord.x  < 600) )) {
	//discard;
	//}

	//vec2 scrPos = vec2(gl_FragCoord) - vec2(350,150);
	//float len =  length(scrPos);
	//if(len < 50 )discard;
}


//END

2016-08-09 21:29:35:075[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:29:35:075[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:29:35:075[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:076[Info         ] ShaderProgram::CheckShaderCompileStatus(15) successful.
2016-08-09 21:29:35:076[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:077[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:29:35:078[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:29:35:079[Info         ] ShaderProgram::AddShader [15] successful.
2016-08-09 21:29:35:080[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:29:35:081[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:29:35:082[cInfo        ] Shader Init started
2016-08-09 21:29:35:083[cInfo        ] Shader Program created.
2016-08-09 21:29:35:084[cProcess     ] ShaderProgram::Initialize()[16] successful!
2016-08-09 21:29:35:085[Debug        ] File [..\Data\shaders\texlighting.vert.shader] Opened successfully! Buffer Length:[838]
2016-08-09 21:29:35:085[Debug        ] Shader file [..\Data\shaders\texlighting.vert.shader] contents:
//BEGIN
#version 430 core

layout (location  = 0)  in vec3 vPosition;
layout (location  = 1)  in vec2 vUV;
layout (location  = 2)  in vec3 vNorm;

layout (location = 16) uniform mat4 MAT;

layout(location = 21) uniform mat4 SRmat;
layout(location = 22) uniform vec3 lPos;
layout(location = 23) uniform vec3 objPos;
layout(location = 24) uniform vec3 camPos;

out vec3 lightPos;
out vec3 normal;
out vec2 UV;
out vec3 Pos;
out vec3 cameraPos;
//out vec4 color;

void main()
{
	vec4 vertPos = MAT * vec4(vPosition, 1.0);
	gl_Position = vertPos;

	Pos = objPos + vec3(SRmat * vec4(vPosition, 1.0));
	cameraPos = camPos;
	normal = vec3(SRmat * vec4(vNorm, 1.0));
	UV = vUV;
	lightPos = lPos; 

	
	//if (falloff < 1.0f) falloff = 1.0f;
	//color = vec3(finalLight, finalLight, finalLight);
	//normal = vNorm;
	
	
}
//END

2016-08-09 21:29:35:085[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:29:35:085[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:29:35:085[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:086[Info         ] ShaderProgram::CheckShaderCompileStatus(17) successful.
2016-08-09 21:29:35:086[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:087[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:29:35:088[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:29:35:090[Info         ] ShaderProgram::AddShader [17] successful.
2016-08-09 21:29:35:090[Debug        ] File [..\Data\shaders\texlighting.frag.shader] Opened successfully! Buffer Length:[998]
2016-08-09 21:29:35:103[Process      ] ShaderManager Initialized successfully
2016-08-09 21:29:35:103[cInfo        ] Shader Init started
2016-08-09 21:29:35:104[cInfo        ] Shader Program created.
2016-08-09 21:29:35:106[cProcess     ] ShaderProgram::Initialize()[19] successful!
2016-08-09 21:29:35:107[Debug        ] File [..\Data\shaders\debug.vert.shader] Opened successfully! Buffer Length:[291]
2016-08-09 21:29:35:107[Debug        ] Shader file [..\Data\shaders\debug.vert.shader] contents:
//BEGIN
#version 430 core

layout(location = 0)  in vec3 vPosition;

layout(location = 15) uniform vec3 colorin;
layout(location = 16) uniform mat4 MAT;

out vec4 color;

void main()
{
	vec4 vertPos = vec4(vPosition, 1.0);
	gl_Position = MAT *  vertPos;
	color = vec4(colorin, 1.0);
}
//END

2016-08-09 21:29:35:107[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:29:35:107[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:29:35:108[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:111[Info         ] ShaderProgram::CheckShaderCompileStatus(20) successful.
2016-08-09 21:29:35:111[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:29:35:113[cFatalError  ] ShaderProgram::SaveShaderInfo() Shaders list m_shaders is full, max val:[2]
2016-08-09 21:29:35:115[cError       ] ShaderManager::AddNewShader()[..\Data\shaders\debug.vert.shader]:AddVertexShader failed.
2016-08-09 21:29:35:120[cFatalError  ] BodaciousQuest::Initialize(): InitializeGL() failed
2016-08-09 21:29:35:122[cProcess     ] BufferManager::Shutdown() successful.
2016-08-09 21:29:35:124[cProcess     ] RenderEngine::Shutdown() successful.
2016-08-09 21:29:35:126[cProcess     ] Camera::Shutdown() successful.
2016-08-09 21:29:35:126[cProcess     ] MyWindow::Shutdown() successful!
2016-08-09 21:29:35:127[cProcess     ] BodaciousQuest::Shutdown() successful.
2016-08-09 21:29:35:128[cFatalError  ] MyWindow::Initialize() Failed to initialize m_game.
2016-08-09 21:29:35:130[cProcess     ] MyWindow::Shutdown() successful!

2016-08-09 21:31:30:385[Process      ] GameLogger::Initialize() opened log file [..\Data\LogFiles\2016-08-09 21-31-30.BodaciousQuest.log] for writing
2016-08-09 21:31:30:385[Info         ] GameLogger::Initialize() successful
2016-08-09 21:31:30:385[Process      ] ConfigReader opened [..\Data\BodaciousQuest.config] successfully
2016-08-09 21:31:30:385[Info         ] ConfigReader initialized successfully
2016-08-09 21:31:30:385[Info         ] Valid KVP [BodaciousQuest.ShowFullScreen] [false] added
2016-08-09 21:31:30:385[Info         ] Valid KVP [BodaciousQuest.FpsInterval] [5.0] added
2016-08-09 21:31:30:385[Info         ] Valid KVP [BodaciousQuest.EnableControls] [true] added
2016-08-09 21:31:30:385[Info         ] Valid KVP [BodaciousQuest.LoadCubeFirst] [true] added
2016-08-09 21:31:30:385[Info         ] Valid KVP [BodaciousQuest.CameraWalkMode] [false] added
2016-08-09 21:31:30:385[Info         ] Valid KVP [BodaciousQuest.GridSize] [40] added
2016-08-09 21:31:30:385[Info         ] Valid KVP [ObjConverter.Mode.VertexType] [pt] added
2016-08-09 21:31:30:385[Info         ] Valid KVP [ObjConverter.Mode.Analyze] [false] added
2016-08-09 21:31:30:385[Info         ] Valid KVP [ObjConverter.Model] [AIWorld] added
2016-08-09 21:31:30:385[Info         ] Valid KVP [ObjConverter.Color] [random] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Obj.InputFileFolder] [..\\Data\\Objs\\] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Scene.OutputFileFolder] [..\\Data\\Scenes\\] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Dargon.NumVerts] [57967] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Dargon.NumIndices] [337824] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Dargon.NumTexCoords] [60175] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Dargon.NumNormals] [337824] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Swamp.NumVerts] [2735] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Swamp.NumIndices] [8556] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Swamp.NumTexCoords] [3622] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Swamp.NumNormals] [5156] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Pyramid.NumVerts] [5] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Pyramid.NumIndices] [18] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Pyramid.NumTexCoords] [10] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Pyramid.NumNormals] [16] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.AIWorld.NumVerts] [1957] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.AIWorld.NumIndices] [8718] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.AIWorld.NumTexCoords] [4186] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.AIWorld.NumNormals] [5418] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.GameWeapon.NumVerts] [2068] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.GameWeapon.NumIndices] [9894] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.GameWeapon.NumTexCoords] [0] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.GameWeapon.NumNormals] [0] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Chicken.NumVerts] [224] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Chicken.NumIndices] [1374] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Chicken.NumTexCoords] [472] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Chicken.NumNormals] [565] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Cube.NumVerts] [8] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Cube.NumIndices] [36] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Cube.NumTexCoords] [14] added
2016-08-09 21:31:30:386[Info         ] Valid KVP [ObjConverter.Model.Cube.NumNormals] [24] added
2016-08-09 21:31:30:512[Process      ] ShaderManager Initialized successfully
2016-08-09 21:31:30:512[cInfo        ] Shader Init started
2016-08-09 21:31:30:512[cInfo        ] Shader Program created.
2016-08-09 21:31:30:513[cProcess     ] ShaderProgram::Initialize()[1] successful!
2016-08-09 21:31:47:442[Debug        ] File [..\Data\shaders\debug.vert.shader] Opened successfully! Buffer Length:[291]
2016-08-09 21:31:47:442[Debug        ] Shader file [..\Data\shaders\debug.vert.shader] contents:
//BEGIN
#version 430 core

layout(location = 0)  in vec3 vPosition;

layout(location = 15) uniform vec3 colorin;
layout(location = 16) uniform mat4 MAT;

out vec4 color;

void main()
{
	vec4 vertPos = vec4(vPosition, 1.0);
	gl_Position = MAT *  vertPos;
	color = vec4(colorin, 1.0);
}
//END

2016-08-09 21:31:47:442[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:31:47:442[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:31:47:443[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:445[Info         ] ShaderProgram::CheckShaderCompileStatus(2) successful.
2016-08-09 21:31:47:445[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:447[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:31:47:448[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:31:47:450[Info         ] ShaderProgram::AddShader [2] successful.
2016-08-09 21:31:47:450[Debug        ] File [..\Data\shaders\debug.frag.shader] Opened successfully! Buffer Length:[104]
2016-08-09 21:31:47:450[Debug        ] Shader file [..\Data\shaders\debug.frag.shader] contents:
//BEGIN
#version 430 core


in  vec4 color;
out vec4 outColor;

void main()
{
	outColor = color;
}


//END

2016-08-09 21:31:47:450[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:31:47:450[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:31:47:450[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:451[Info         ] ShaderProgram::CheckShaderCompileStatus(3) successful.
2016-08-09 21:31:47:451[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:453[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:31:47:454[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:31:47:456[Info         ] ShaderProgram::AddShader [3] successful.
2016-08-09 21:31:47:457[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:31:47:458[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:31:47:459[cInfo        ] Shader Init started
2016-08-09 21:31:47:460[cInfo        ] Shader Program created.
2016-08-09 21:31:47:461[cProcess     ] ShaderProgram::Initialize()[4] successful!
2016-08-09 21:31:47:462[Debug        ] File [..\Data\shaders\play.vert.shader] Opened successfully! Buffer Length:[343]
2016-08-09 21:31:47:462[Debug        ] Shader file [..\Data\shaders\play.vert.shader] contents:
//BEGIN
#version 430 core

layout (location = 0)  in vec3 vPosition;
layout (location = 1)  in vec3 vColor;
layout (location = 15) uniform vec3 colorin;
layout (location = 16) uniform mat4 MAT;

out vec4 color;

void main()
{
	vec4 vertPos = vec4(vPosition, 1.0);
	gl_Position = MAT *  vertPos;
	color = vec4((vColor + colorin), 1.0);
}
//END

2016-08-09 21:31:47:462[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:31:47:462[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:31:47:462[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:464[Info         ] ShaderProgram::CheckShaderCompileStatus(5) successful.
2016-08-09 21:31:47:464[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:465[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:31:47:466[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:31:47:467[Info         ] ShaderProgram::AddShader [5] successful.
2016-08-09 21:31:47:467[Debug        ] File [..\Data\shaders\play.frag.shader] Opened successfully! Buffer Length:[391]
2016-08-09 21:31:47:467[Debug        ] Shader file [..\Data\shaders\play.frag.shader] contents:
//BEGIN
#version 430 core


in  vec4 color;
out vec4 outColor;

void main()
{

	//if (color.r < .7) discard;
	outColor = color;

	//if(((gl_FragCoord.x  > 600)&& (gl_FragCoord.y < 300)) || ((gl_FragCoord.y < 300)  && (gl_FragCoord.x  < 600) )) {
	//discard;
	//}

	//vec2 scrPos = vec2(gl_FragCoord) - vec2(350,150);
	//float len =  length(scrPos);
	//if(len < 50 )discard;
}


//END

2016-08-09 21:31:47:467[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:31:47:467[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:31:47:467[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:468[Info         ] ShaderProgram::CheckShaderCompileStatus(6) successful.
2016-08-09 21:31:47:468[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:469[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:31:47:469[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:31:47:470[Info         ] ShaderProgram::AddShader [6] successful.
2016-08-09 21:31:47:471[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:31:47:473[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:31:47:474[cInfo        ] Shader Init started
2016-08-09 21:31:47:474[cInfo        ] Shader Program created.
2016-08-09 21:31:47:475[cProcess     ] ShaderProgram::Initialize()[7] successful!
2016-08-09 21:31:47:475[Debug        ] File [..\Data\shaders\texture.vert.shader] Opened successfully! Buffer Length:[305]
2016-08-09 21:31:47:476[Debug        ] Shader file [..\Data\shaders\texture.vert.shader] contents:
//BEGIN
#version 430 core

layout (location = 0)  in vec3 vPosition;
layout (location = 1)  in vec2 vUV;

layout (location = 16) uniform mat4 MAT;

//out data
out vec2 UV;

//out vec4 color;

void main()
{
	vec4 vertPos = vec4(vPosition, 1.0);
	gl_Position = MAT *  vertPos;

	UV = vUV;
	
	
}
//END

2016-08-09 21:31:47:476[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:31:47:476[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:31:47:476[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:476[Info         ] ShaderProgram::CheckShaderCompileStatus(8) successful.
2016-08-09 21:31:47:476[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:477[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:31:47:478[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:31:47:479[Info         ] ShaderProgram::AddShader [8] successful.
2016-08-09 21:31:47:479[Debug        ] File [..\Data\shaders\texture.frag.shader] Opened successfully! Buffer Length:[482]
2016-08-09 21:31:47:479[Debug        ] Shader file [..\Data\shaders\texture.frag.shader] contents:
//BEGIN
#version 430 core


in  vec2 UV;
out vec4 outColor;

layout(location = 20) uniform sampler2D textureSampler;

void main()
{

	//if (color.r < .7) discard;
	outColor = vec4(texture(textureSampler, UV).rgb, 1.0);

	//if(((gl_FragCoord.x  > 600)&& (gl_FragCoord.y < 300)) || ((gl_FragCoord.y < 300)  && (gl_FragCoord.x  < 600) )) {
	//discard;
	//}
	//vec2 scrPos = vec2(gl_FragCoord) - vec2(350,150);
	//float len =  length(scrPos);
	//if(len < 50 )discard;
}


//END

2016-08-09 21:31:47:479[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:31:47:479[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:31:47:479[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:480[Info         ] ShaderProgram::CheckShaderCompileStatus(9) successful.
2016-08-09 21:31:47:480[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:483[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:31:47:483[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:31:47:484[Info         ] ShaderProgram::AddShader [9] successful.
2016-08-09 21:31:47:485[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:31:47:486[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:31:47:487[cInfo        ] Shader Init started
2016-08-09 21:31:47:487[cInfo        ] Shader Program created.
2016-08-09 21:31:47:488[cProcess     ] ShaderProgram::Initialize()[10] successful!
2016-08-09 21:31:47:489[Debug        ] File [..\Data\shaders\framebuffer.vert.shader] Opened successfully! Buffer Length:[305]
2016-08-09 21:31:47:489[Debug        ] Shader file [..\Data\shaders\framebuffer.vert.shader] contents:
//BEGIN
#version 430 core

layout (location = 0)  in vec3 vPosition;
layout (location = 1)  in vec2 vUV;

layout (location = 16) uniform mat4 MAT;

//out data
out vec2 UV;

//out vec4 color;

void main()
{
	vec4 vertPos = vec4(vPosition, 1.0);
	gl_Position = MAT *  vertPos;

	UV = vUV;
	
	
}
//END

2016-08-09 21:31:47:489[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:31:47:489[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:31:47:489[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:490[Info         ] ShaderProgram::CheckShaderCompileStatus(11) successful.
2016-08-09 21:31:47:490[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:490[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:31:47:492[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:31:47:493[Info         ] ShaderProgram::AddShader [11] successful.
2016-08-09 21:31:47:493[Debug        ] File [..\Data\shaders\framebuffer.frag.shader] Opened successfully! Buffer Length:[599]
2016-08-09 21:31:47:493[Debug        ] Shader file [..\Data\shaders\framebuffer.frag.shader] contents:
//BEGIN
#version 430 core


in  vec2 UV;
out vec4 outColor;

layout(location = 20) uniform sampler2D textureSampler;

void main()
{

	//if (color.r < .7) discard;
	vec3 tempCol = texture(textureSampler, UV).rgb;
	//if (tempCol == vec3(0, 0, 0)) discard;
	outColor = vec4(tempCol.r / 1.5f, tempCol.g / 1.5f, tempCol.b / 1.5f, 1.0f);

	//if(((gl_FragCoord.x  > 600)&& (gl_FragCoord.y < 300)) || ((gl_FragCoord.y < 300)  && (gl_FragCoord.x  < 600) )) {
	//discard;
	//}

	//vec2 scrPos = vec2(gl_FragCoord) - vec2(350,150);
	//float len =  length(scrPos);
	//if(len < 50 )discard;
}


//END

2016-08-09 21:31:47:493[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:31:47:493[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:31:47:493[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:494[Info         ] ShaderProgram::CheckShaderCompileStatus(12) successful.
2016-08-09 21:31:47:494[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:495[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:31:47:496[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:31:47:497[Info         ] ShaderProgram::AddShader [12] successful.
2016-08-09 21:31:47:498[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:31:47:499[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:31:47:500[cInfo        ] Shader Init started
2016-08-09 21:31:47:500[cInfo        ] Shader Program created.
2016-08-09 21:31:47:502[cProcess     ] ShaderProgram::Initialize()[13] successful!
2016-08-09 21:31:47:503[Debug        ] File [..\Data\shaders\lighting.vert.shader] Opened successfully! Buffer Length:[2053]
2016-08-09 21:31:47:503[cDebug       ] Shader file [..\Data\shaders\lighting.vert.shader] is too big to display contents.
2016-08-09 21:31:47:504[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:31:47:504[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:31:47:504[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:505[Info         ] ShaderProgram::CheckShaderCompileStatus(14) successful.
2016-08-09 21:31:47:505[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:506[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:31:47:506[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:31:47:507[Info         ] ShaderProgram::AddShader [14] successful.
2016-08-09 21:31:47:507[Debug        ] File [..\Data\shaders\lighting.frag.shader] Opened successfully! Buffer Length:[528]
2016-08-09 21:31:47:507[Debug        ] Shader file [..\Data\shaders\lighting.frag.shader] contents:
//BEGIN
#version 430 core


in  vec3 normal;
in  vec3 color;
out vec4 outColor;

//layout(location = 20) uniform sampler2D textureSampler;

void main()
{

	//if (color.r < .7) discard;


	outColor = vec4(color, 1.0f);//vec4(normal.x, normal.y, normal.z, 1.0);

	//if(((gl_FragCoord.x  > 600)&& (gl_FragCoord.y < 300)) || ((gl_FragCoord.y < 300)  && (gl_FragCoord.x  < 600) )) {
	//discard;
	//}

	//vec2 scrPos = vec2(gl_FragCoord) - vec2(350,150);
	//float len =  length(scrPos);
	//if(len < 50 )discard;
}


//END

2016-08-09 21:31:47:507[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:31:47:507[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:31:47:508[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:508[Info         ] ShaderProgram::CheckShaderCompileStatus(15) successful.
2016-08-09 21:31:47:508[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:31:47:509[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:31:47:511[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:31:47:512[Info         ] ShaderProgram::AddShader [15] successful.
2016-08-09 21:31:47:514[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:31:47:514[cInfo        ] CheckProgramStatus() successful!
2016-08-09 21:32:00:883[cInfo        ] Shader Init started
2016-08-09 21:32:00:883[cInfo        ] Shader Program created.
2016-08-09 21:32:00:885[cProcess     ] ShaderProgram::Initialize()[16] successful!
2016-08-09 21:32:04:456[Debug        ] File [..\Data\shaders\texlighting.vert.shader] Opened successfully! Buffer Length:[838]
2016-08-09 21:32:04:456[Debug        ] Shader file [..\Data\shaders\texlighting.vert.shader] contents:
//BEGIN
#version 430 core

layout (location  = 0)  in vec3 vPosition;
layout (location  = 1)  in vec2 vUV;
layout (location  = 2)  in vec3 vNorm;

layout (location = 16) uniform mat4 MAT;

layout(location = 21) uniform mat4 SRmat;
layout(location = 22) uniform vec3 lPos;
layout(location = 23) uniform vec3 objPos;
layout(location = 24) uniform vec3 camPos;

out vec3 lightPos;
out vec3 normal;
out vec2 UV;
out vec3 Pos;
out vec3 cameraPos;
//out vec4 color;

void main()
{
	vec4 vertPos = MAT * vec4(vPosition, 1.0);
	gl_Position = vertPos;

	Pos = objPos + vec3(SRmat * vec4(vPosition, 1.0));
	cameraPos = camPos;
	normal = vec3(SRmat * vec4(vNorm, 1.0));
	UV = vUV;
	lightPos = lPos; 

	
	//if (falloff < 1.0f) falloff = 1.0f;
	//color = vec3(finalLight, finalLight, finalLight);
	//normal = vNorm;
	
	
}
//END

2016-08-09 21:32:04:456[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:32:04:456[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:32:04:456[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:32:04:458[Info         ] ShaderProgram::CheckShaderCompileStatus(17) successful.
2016-08-09 21:32:04:458[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:32:04:459[cInfo        ] ShaderInfo saved successfully.
2016-08-09 21:32:04:460[cDebug       ] ShaderProgram::AddShader() : glAttachShader() successful
2016-08-09 21:32:04:462[Info         ] ShaderProgram::AddShader [17] successful.
2016-08-09 21:32:25:285[Debug        ] File [..\Data\shaders\texlighting.frag.shader] Opened successfully! Buffer Length:[998]
2016-08-09 21:32:25:296[Process      ] ShaderManager Initialized successfully
2016-08-09 21:32:25:297[cInfo        ] Shader Init started
2016-08-09 21:32:25:297[cInfo        ] Shader Program created.
2016-08-09 21:32:25:298[cProcess     ] ShaderProgram::Initialize()[19] successful!
2016-08-09 21:32:25:299[Debug        ] File [..\Data\shaders\debug.vert.shader] Opened successfully! Buffer Length:[291]
2016-08-09 21:32:25:299[Debug        ] Shader file [..\Data\shaders\debug.vert.shader] contents:
//BEGIN
#version 430 core

layout(location = 0)  in vec3 vPosition;

layout(location = 15) uniform vec3 colorin;
layout(location = 16) uniform mat4 MAT;

out vec4 color;

void main()
{
	vec4 vertPos = vec4(vPosition, 1.0);
	gl_Position = MAT *  vertPos;
	color = vec4(colorin, 1.0);
}
//END

2016-08-09 21:32:25:300[Debug        ]  ShaderProgram::AddShader() file with data was read in
2016-08-09 21:32:25:300[Debug        ] ShaderProgram::AddShader() : glShaderSource() successful
2016-08-09 21:32:25:301[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:32:25:303[Info         ] ShaderProgram::CheckShaderCompileStatus(20) successful.
2016-08-09 21:32:25:303[cDebug       ] ShaderProgram::AddShader() : glCompileShader() successful
2016-08-09 21:32:25:304[cFatalError  ] ShaderProgram::SaveShaderInfo() Shaders list m_shaders is full, max val:[2]
2016-08-09 21:32:25:306[cError       ] ShaderManager::AddNewShader()[..\Data\shaders\debug.vert.shader]:AddVertexShader failed.
2016-08-09 21:32:25:308[cFatalError  ] BodaciousQuest::Initialize(): InitializeGL() failed
2016-08-09 21:32:25:310[cProcess     ] BufferManager::Shutdown() successful.
2016-08-09 21:32:25:312[cProcess     ] RenderEngine::Shutdown() successful.
2016-08-09 21:32:25:313[cProcess     ] Camera::Shutdown() successful.
2016-08-09 21:32:25:314[cProcess     ] MyWindow::Shutdown() successful!
2016-08-09 21:32:25:315[cProcess     ] BodaciousQuest::Shutdown() successful.
2016-08-09 21:32:25:316[cFatalError  ] MyWindow::Initialize() Failed to initialize m_game.
2016-08-09 21:32:25:317[cProcess     ] MyWindow::Shutdown() successful!
